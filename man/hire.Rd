% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hire.R
\name{hire}
\alias{hire}
\title{Hire a crew of R workers.}
\usage{
hire(workload, schedule, workers = 1, type = "lapply", fun = lapply, ...)
}
\arguments{
\item{workload}{named list of jobs.
The names are job IDs and the values are expressions or language objects.}

\item{schedule}{an `igraph` object linking the job IDs together.
This is how `crew` knows how to execute some jobs before other jobs.}

\item{workers}{number of parallel workers to spawn in the crew.
If `type` is `"lapply"` (default), you may need to pass other arguments
to `...` to ensure the workers actually run in parallel. For example,
if `fun` is `parallel::mclapply`, then you should set `mc.cores`
to the number of workers. For `fun` equal to `lapply` (default),
no parallelism is possible no matter how many `workers` you request.}

\item{type}{character scalar naming the type of crew to hire.
Currently, `"lapply"` is the only crew type.}

\item{fun}{an `lapply`-like function to use for persistent workers
if `type` is `"lapply"`.}

\item{...}{additional arguments.}
}
\value{
nothing
}
\description{
Hire a crew of R workers.
}
\examples{
\dontrun{
withr::with_dir(tempfile(), {
# Run all the jobs in the workload in the
# correct order given in the schedule.
# Use 2 persistent workers.
hire(
  workload = workload = example_workload(),
  schedule = schedule = example_schedule(),
  fun = lapply,
  workers = 2,
  mc.cores = 2
)
})
}
}
\seealso{
[example_workload()], [example_schedule()]
}
